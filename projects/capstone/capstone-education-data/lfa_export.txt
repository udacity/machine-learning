KC Model Values for Default model
AIC	BIC	Number of Total Parameters
		146

KC Values for Default model
Name	Category	Intercept	Slope
Add/subtract in two-step equations.			
Add/subtract with variables on both sides, decimal.			
Add/subtract with variables on both sides, decimal>10000.			
Add/subtract with variables on both sides.			
Consolidate variables, decimal.			
Consolidate variables, decimals>10000.			
Consolidate variarbles, integers<10.			
Isolate variable term in two-step equations, decimal>10000.			
Multiply/divide in two-step equations.			
Multiply/divide with variables on both sides, decimal>10000.			
Multiply/divide with variables on both sides.			
Multiply/divide, with variabless on both sides, decimal.			
Remove coefficient in two-step equations, decimal>10000.			
Remove variable from denominator, type-in.			
Remove variable from denominator.			
[SkillRule: Add/Subtract; [Typein Skill: {Isolate positive; Isolate negative; Remove constant; Consolidate vars, no coeff; Consolidate vars with coeff; Consolidate vars, any}]]			
[SkillRule: Calculate negative coefficient; [Typein Skill: Make variable positive]]			
[SkillRule: Consolidate vars with coeff; CLT]			
[SkillRule: Consolidate vars, any; {Combine variables to right, sub; Combine variables to right, add; Combine variables to right, gen; Combine variables to right; Combine variables to left, add; Combine variables to left, sub; Combine variables to left, gen; ax+b=cx; ax+b=cx, move left; ax+b=cx+d, pos; ax+b=cx+d, neg; ax+b=cx+d, move right; ax+b=cx+d, move two; ax+b=cx+d, move two2; x+b=cx+d, pos; x+b=cx+d, neg; x+b=cx+d, move right; x+b=cx+d, move two; x+b=cx+d, move two2; ax+b=x+d, pos; ax+b=x+d, neg; ax+b=x+d, move right; ax+b=x+d, move two; ax+b=x+d, move two2; x+b=x+d, pos; x+b=x+d, neg; x+b=x+d, move right; x+b=x+d, move two; x+b=x+d, move two2}]			
[SkillRule: Consolidate vars, no coeff; CLT]			
[SkillRule: Do Combine Terms - Whole; [Typein Skill: {Select Combine Terms; Combine like terms, no var}]]			
[SkillRule: Done?; {doneleft; doneright; doneleft, no menu; doneright, nomenu; done no solution; Done No Solution, domain exception; Done No Solution, range exception; done infinite solutions; done expr, standard form; done expr, standard form, no menu}]			
[SkillRule: Eliminate Parens; {CLT nested; CLT nested, parens; Distribute Mult right; Distribute Mult left; (+/-x +/-a)/b=c, mult; (+/-x +/-a)*b=c, div; [var expr]/[const expr] = [const expr], multiply; Distribute Division left; Distribute Division right; Distribute both mult left; Distribute both mult right; Distribute both divide left; Distribute both divide right; Distribute subex}]			
[SkillRule: Eliminate Parens; {[var expr]/[const expr] = [const expr], multiply; [var expr]*[const expr] = [const expr], divide}]			
[SkillRule: Isolate negative; x+a=b, negative]			
[SkillRule: Isolate positive; x+a=b, positive]			
[SkillRule: Make variable positive; {add x in -x; move neg var to other side}]			
[SkillRule: Make variable positive; {ax+b=c, divide; ax=b; [const expr]*[var fact] + [const expr] = [const expr], divide; [var expr]*[const expr] = [const expr], divide; a/b*x=c; a/b*x=c, reciprocal; ax/b=c, reciprocal; ax/b=c; x/a=b; ax=b; (+/-x +/-a)/b=c, mult; a=x*(b+c); a=x*(b-c); a=x*(b*c+d); x/a+b=c, multiply; [var expr]/[const expr] = [const expr], multiply}]			
[SkillRule: Multiply/Divide; [Typein Skill: {Remove coefficient; Variable in denominator}]]			
[SkillRule: Remove coefficient; {ax+b=c, divide; ax=b; [const expr]*[var fact] + [const expr] = [const expr], divide; [var expr]*[const expr] = [const expr], divide; a/b*x=c; a/b*x=c, reciprocal; ax/b=c, reciprocal; ax/b=c; x/a=b; ax=b; (+/-x +/-a)/b=c, mult; a=x*(b+c); a=x*(b-c); a=x*(b*c+d); x/a+b=c, multiply; [var expr]/[const expr] = [const expr], multiply}]			
[SkillRule: Remove constant; {ax+b=c, positive; ax+b=c, negative; x+a=b, positive; x+a=b, negative; [var expr]+[const expr]=[const expr], positive; [var expr]+[const expr]=[const expr], negative; [var expr]+[const expr]=[const expr], all; Combine constants to right; Combine constants to left; a-x=b, positive; a/x+b=c, positive; a/x+b=c, negative}]			
[SkillRule: Remove negative coefficient; {ax+b=c, divide; ax=b; [const expr]*[var fact] + [const expr] = [const expr], divide; [var expr]*[const expr] = [const expr], divide; a/b*x=c; a/b*x=c, reciprocal; ax/b=c, reciprocal; ax/b=c; x/a=b; ax=b; (+/-x +/-a)/b=c, mult; a=x*(b+c); a=x*(b-c); a=x*(b*c+d); x/a+b=c, multiply; [var expr]/[const expr] = [const expr], multiply}]			
[SkillRule: Remove positive coefficient; {ax+b=c, divide; ax=b; [const expr]*[var fact] + [const expr] = [const expr], divide; [var expr]*[const expr] = [const expr], divide; a/b*x=c; a/b*x=c, reciprocal; ax/b=c, reciprocal; ax/b=c; x/a=b; ax=b; (+/-x +/-a)/b=c, mult; a=x*(b+c); a=x*(b-c); a=x*(b*c+d); x/a+b=c, multiply; [var expr]/[const expr] = [const expr], multiply}]			
[SkillRule: Select Combine Terms; CLT]			
[SkillRule: Select Eliminate Parens; {CLT nested; CLT nested, parens; Distribute Mult right; Distribute Mult left; Distribute subex}]			
[SkillRule: Select Multiply; {MT; MT no fraction coeff}]			
[SkillRule: Variable in denominator; {a/x=[anything]; a/x=b; a/x=b, sophisticated}]			
[SkillRule: ax+b=c, negative; ax+b=c, negative]			
[SkillRule: done no solutions; {done no solution; Done No Solution, domain exception; Done No Solution, range exception}]			
combine-like-terms-sp			
distribute-sp			
perform-mult-r-sp			
perform-mult-row2-sp			
perform-mult-sp			
simplify-fractions-sp			

Student Values for Default model
Name	Intercept
